{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Signup.js","components/Dashboard.js","components/Login.js","components/PrivateRoute.js","components/ForgotPassword.js","components/UpdateProfile.js","components/App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","error","useHistory","Card","Body","className","Alert","variant","Form","Group","id","Label","Control","type","ref","required","Button","disabled","to","Dashboard","setError","history","a","push","onClick","Login","e","preventDefault","current","onSubmit","PrivateRoute","Component","component","rest","render","props","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","App","Container","style","minHeight","maxWidth","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a44b5926.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyB4oXbeiEX-8ZvfPO4nrmBkx-hrKHPwHns\",\n  authDomain: \"fir-auth-dev-f61ed.firebaseapp.com\",\n  projectId: \"fir-auth-dev-f61ed\",\n  storageBucket: \"fir-auth-dev-f61ed.appspot.com\",\n  messagingSenderId: \"246817582391\",\n  appId: \"1:246817582391:web:6f1eb2e12dcd8aa274beb2\"\n});\n\nexport const auth = app.auth();\nexport default app;\n","import React, { useContext, useState, useEffect } from \"react\"\nimport { auth } from \"../firebase\"\n\nconst AuthContext = React.createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport default function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function signup(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function logout() {\n    return auth.signOut()\n  }\n\n  function resetPassword(email) {\n    return auth.sendPasswordResetEmail(email)\n  }\n\n  function updateEmail(email) {\n    return currentUser.updateEmail(email)\n  }\n\n  function updatePassword(password) {\n    return currentUser.updatePassword(password)\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    resetPassword,\n    updateEmail,\n    updatePassword\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  )\n}","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport default function Signup() {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Sign Up</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Password Confirmation</Form.Label>\n              <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\n              Sign Up\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Already have an account? <Link to=\"/login\">Log In</Link>\n      </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\"\nimport { Card, Button, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Dashboard() {\n  const [error, setError] = useState(\"\")\n  const { currentUser, logout } = useAuth()\n  const history = useHistory()\n\n  async function handleLogout() {\n    setError(\"\")\n\n    try {\n      await logout()\n      history.push(\"/login\")\n    } catch {\n      setError(\"Failed to log out\")\n    }\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <strong>Email:</strong> {currentUser.email}\n          <Link to=\"/update-profile\" className=\"btn btn-primary w-100 mt-3\">\n            Update Profile\n          </Link>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Button variant=\"link\" onClick={handleLogout}>\n          Log Out\n        </Button>\n      </div>\n    </>\n  )\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function Login() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const { login } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/\")\n    } catch {\n      setError(\"Failed to log in\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Log In</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" ref={passwordRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/forgot-password\">Forgot Password?</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  )\n}\n\n\n","import React from \"react\"\nimport { Route, Redirect } from \"react-router-dom\"\nimport { useAuth } from \"../contexts/AuthContext\"\n\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  const { currentUser } = useAuth()\n\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }}\n    ></Route>\n  )\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link } from \"react-router-dom\"\n\nexport default function ForgotPassword() {\n  const emailRef = useRef()\n  const { resetPassword } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    try {\n      setMessage(\"\")\n      setError(\"\")\n      setLoading(true)\n      await resetPassword(emailRef.current.value)\n      setMessage(\"Check your inbox for further instructions\")\n    } catch {\n      setError(\"Failed to reset password\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Password Reset</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          {message && <Alert variant=\"success\">{message}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" ref={emailRef} required />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\n              Reset Password\n            </Button>\n          </Form>\n          <div className=\"w-100 text-center mt-3\">\n            <Link to=\"/login\">Login</Link>\n          </div>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        Need an account? <Link to=\"/signup\">Sign Up</Link>\n      </div>\n    </>\n  )\n}","import React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { Link, useHistory } from \"react-router-dom\"\n\nexport default function UpdateProfile() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { currentUser, updatePassword, updateEmail } = useAuth()\n  const [error, setError] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n\n  function handleSubmit(e) {\n    e.preventDefault()\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    const promises = []\n    setLoading(true)\n    setError(\"\")\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value))\n    }\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value))\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        history.push(\"/\")\n      })\n      .catch(() => {\n        setError(\"Failed to update account\")\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  return (\n    <>\n      <Card>\n        <Card.Body>\n          <h2 className=\"text-center mb-4\">Update Profile</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form onSubmit={handleSubmit}>\n            <Form.Group id=\"email\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                ref={emailRef}\n                required\n                defaultValue={currentUser.email}\n              />\n            </Form.Group>\n            <Form.Group id=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Form.Group id=\"password-confirm\">\n              <Form.Label>Repeat Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                ref={passwordConfirmRef}\n                placeholder=\"Leave blank to keep the same\"\n              />\n            </Form.Group>\n            <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">\n              Update\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n      <div className=\"w-100 text-center mt-2\">\n        <Link to=\"/\">Cancel</Link>\n      </div>\n    </>\n  )\n}","// import logo from './logo.svg';\nimport \"./../App.css\";\nimport Signup from \"./Signup\";\nimport { Container } from \"react-bootstrap\";\nimport AuthProvider from \"../contexts/AuthContext\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Dashboard from \"./Dashboard\"\nimport Login from \"./Login\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport ForgotPassword from \"./ForgotPassword\"\nimport UpdateProfile from \"./UpdateProfile\"\n\nfunction App() {\n\n  return (\n\n    <Container\n      className=\"d-flex align-items-center justify-content-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n        <Router>\n          <AuthProvider>\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={Dashboard} />\n              <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n              <Route path=\"/signup\" component={Signup} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/forgot-password\" component={ForgotPassword} />\n            </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n    </Container>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}